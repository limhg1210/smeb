# Generated by Django 3.1.4 on 2021-02-22 20:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('status', models.BooleanField(default=True, verbose_name='활성')),
                ('name', models.CharField(default='', max_length=50, verbose_name='이름')),
                ('nickname', models.CharField(blank=True, default='', max_length=50, verbose_name='닉네임')),
                ('duty', models.CharField(blank=True, default='', max_length=254, verbose_name='직책')),
                ('phone', models.CharField(blank=True, default='', max_length=20, verbose_name='전화번호')),
                ('email', models.EmailField(blank=True, default='', max_length=255, verbose_name='이메일')),
                ('join_date', models.DateField(blank=True, null=True, verbose_name='입사일')),
                ('leave_date', models.DateField(blank=True, null=True, verbose_name='퇴사일')),
                ('photo', models.FileField(blank=True, default='default/profile_photo.png', upload_to='profile_photo/', verbose_name='프로필사진')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='this_user_author', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
            ],
            options={
                'verbose_name': '회원',
                'ordering': ['-status', 'pk'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('status', models.BooleanField(default=True, verbose_name='활성')),
                ('name', models.CharField(default='', max_length=50, verbose_name='직위명')),
                ('level', models.IntegerField(default=0, verbose_name='레벨')),
                ('wage', models.IntegerField(default=0, verbose_name='평균시급')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='this_position_author', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
            ],
            options={
                'verbose_name': '직위',
                'ordering': ['-status', 'level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='등록일시')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='수정일시')),
                ('status', models.BooleanField(default=True, verbose_name='활성')),
                ('name', models.CharField(default='', max_length=50, verbose_name='부서명')),
                ('level', models.IntegerField(default=0, verbose_name='레벨')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='this_department_author', to=settings.AUTH_USER_MODEL, verbose_name='작성자')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managing_department_set', to=settings.AUTH_USER_MODEL, verbose_name='부서장')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_department_set', to='users.department', verbose_name='상위부서')),
            ],
            options={
                'verbose_name': '부서',
                'ordering': ['-status', 'level', 'name'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_set', to='users.department', verbose_name='부서'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='position',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_set', to='users.position', verbose_name='직위'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
